#!/usr/bin/env bash
set -euo pipefail

# ------------- config -------------
YAMLLINT_CONFIG="${YAMLLINT_CONFIG:-yamllint-config.yml}"
K8S_VERSION="${K8S_VERSION:-1.30.0}"
SKIP_KINDS="${SKIP_KINDS:-Application,AppProject,CustomResourceDefinition}"
# ------------- helpers -------------
R=$(tput setaf 1) G=$(tput setaf 2) Y=$(tput setaf 3) N=$(tput sgr0)
log()  { echo -e "$*"; }
ok()   { log "${G}‚úÖ $*${N}"; }
err()  { log "${R}‚ùå $*${N}"; }

git_root=$(git rev-parse --show-toplevel)

# ------------- 0. YAML fixes -------------
mapfile -t files < <(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(yaml|yml)$' || true)
for f in "${files[@]}"; do
  perl -0777 -pe 's/[ \t]+\n/\n/g; s/\n*\z/\n/' -i "${git_root}/${f}"
done
git add "${files[@]}" 2>/dev/null || true

# ------------- 1. lint / kubeval -------------
if [[ ${#files[@]} -gt 0 ]]; then
  log "${Y}üîç Lint YAML‚Ä¶${N}"
  yamllint -c "${git_root}/${YAMLLINT_CONFIG}" "${files[@]}"
  log "${Y}üîç Kubeval‚Ä¶${N}"
  kubeval --ignore-missing-schemas --kubernetes-version "${K8S_VERSION}" \
          --strict --skip-kinds "${SKIP_KINDS}" "${files[@]}"
fi

# ------------- 2. push -------------
git fetch origin
git pull --rebase origin dev
git push "$@"

# ------------- 3. ensure delta -------------
git fetch origin
if git merge-base --is-ancestor origin/main HEAD; then
  log "${Y}Creating delta‚Ä¶${N}"
  git commit --allow-empty -m "delta: keep dev‚Üímain PR open"
  git push
fi

# ------------- 4. PR auto-merge -------------
# --- PR + auto-merge ---
if ! gh pr view dev >/dev/null 2>&1; then
  gh pr create --base main --head dev \
               --title "Auto-sync dev ‚Üí main (permanent)" \
               --body "Do not close"
fi
gh pr merge dev --auto --merge 2>/dev/null || true
ok "Push + PR OK"