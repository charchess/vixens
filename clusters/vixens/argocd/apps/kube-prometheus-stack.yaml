# clusters/vixens/argocd/apps/kube-prometheus-stack.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argoproj.io
spec:
  project: vixens
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "58.1.0" # Version stable et récente
    helm:
      values: |
        # Configuration Générale
        # On désactive les Ingress du chart pour les gérer nous-mêmes
        grafana:
          ingress:
            enabled: false
        prometheus:
          ingress:
            enabled: false
        alertmanager:
          ingress:
            enabled: false

        # Tolérances pour tous les composants, afin qu'ils puissent
        # s'exécuter sur vos nœuds control-plane.
        global:
          tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
        # Certains composants n'utilisent pas les tolérances globales
        kube-state-metrics:
          tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"
        prometheus-node-exporter:
          tolerations:
            - key: "node-role.kubernetes.io/control-plane"
              operator: "Exists"
              effect: "NoSchedule"

        # Désactivation explicite de la persistance
        prometheus:
          prometheusSpec:
            storageSpec: {} # Un objet vide désactive la persistance
        alertmanager:
          alertmanagerSpec:
            storage: {} # Un objet vide désactive la persistance
        grafana:
          persistence:
            enabled: false
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      